//hash:fc5d9b0a
//automatically generated by Makegen

/* located in console.cpp */

//----------------------[referenced from pmd.cpp]--------------------//
void stat(const char *str, ...);
void staterr(const char *str, ...);


/* located in audio.cpp */

//----------------------[referenced from pmd.cpp]--------------------//
void audio_submit_block(uint8_t *blockdata, int size);


/* located in pmd.cpp */

//----------------------[referenced from pmd.cpp]--------------------//
bool pmd_init(void);
void pmd_close(void);
bool pmd_load(const char *fname);
static void load_instrument(FILE *fp, stInstrument *ins);
static bool load_drums(void);
static void drum_begin(int note, int pan);
void pmd_start(void);
void pmd_stop(void);
bool pmd_is_playing();
void pmd_run(void);
void pmd_buffer_finished(void *crap);
static void queue_and_start_buffer(int bufferno);
static void generate_music(uint8_t *outbuffer, int len);
static void start_notes(stTrack *track, int beat);
static void note_begin(int note, int pan, stInstrument *ins);
static void synthesize_note(int note, int pan, stInstrument *ins, stRunningNote *snd);
static void dump_running_notes(void);
void pmd_set_volume(int vol);
void pmd_fade(int vol);
static void run_fade(void);
static void ComputeVolumeRatios(int volume, int panning, double *volume_ratio, double *volume_left_ratio, double *volume_right_ratio);
static int MSToSamples(int ms);
static stRunningNote *create_running_note();
void free_running_note(stRunningNote *note);


/* located in common/misc.cpp */

//----------------------[referenced from pmd.cpp]--------------------//
bool fverifystring(FILE *fp, const char *str);
unsigned int fgetl(FILE *fp);
unsigned short fgeti(FILE *fp);

