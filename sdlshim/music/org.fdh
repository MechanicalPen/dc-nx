//hash:62e47438
//automatically generated by Makegen

/* located in main.cpp */

//----------------------[referenced from org.cpp]--------------------//
uint32_t SDL_GetTicks();


/* located in console.cpp */

//----------------------[referenced from org.cpp]--------------------//
void stat(const char *str, ...);
void staterr(const char *str, ...);


/* located in audio.cpp */

//----------------------[referenced from org.cpp]--------------------//
void audio_submit_block(uint8_t *blockdata, int size);


/* located in org.cpp */

//----------------------[referenced from org.cpp]--------------------//
static void init_pitch(void);
static int GetNoteSampleRate(int note, int instrument_pitch);
static int MSToSamples(int ms);
static int SamplesToMS(int samples);
static bool load_drumtable(void);
static bool load_wavetable(const char *fname);
int org_init(int org_volume);
void org_close(void);
char org_load(const char *fname);
static bool init_buffers(void);
static void free_buffers(void);
bool org_start(int startbeat);
void org_stop(void);
bool org_is_playing(void);
void org_fade(void);
void org_set_volume(int newvolume);
static void runfade();
static void mix_buffers(void);
static void queue_final_buffer(void);
void OrgBufferFinished(void *crap);
static void ComputeVolumeRatios(int volume, int panning, double *volume_ratio, double *volume_left_ratio, double *volume_right_ratio);
static double Interpolate(int sample1, int sample2, double ratio);
static void ForceSamplePos(int m, int desired_samples);
static void silence_gen(stNoteChannel *chan, int num_samples);
static void note_open(stNoteChannel *chan, int wave, int pitch, int note);
static void note_gen(stNoteChannel *chan, int num_samples);
static int note_close(stNoteChannel *chan);
static int drum_open(int m_channel, int wave, int note);
static void drum_gen(int m_channel, int num_samples);
void org_run(void);
static uint32_t generate_music(void);
static void NextBeat(int m);


/* located in common/misc.cpp */

//----------------------[referenced from org.cpp]--------------------//
unsigned int fgetl(FILE *fp);
unsigned short fgeti(FILE *fp);

